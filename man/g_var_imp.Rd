% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots.R
\name{g_var_imp}
\alias{g_var_imp}
\title{Plot variable importances and cumulative approximation of R^2}
\usage{
g_var_imp(
  object,
  feat_labels = NULL,
  textsize = 16,
  top_k = NULL,
  pdp_plot_sample = TRUE,
  show_pdp_plot = TRUE,
  var_imp_type = "normalized",
  logodds_to_prob = FALSE,
  plot_ratios = if (show_pdp_plot) c(3, 2, 2) else c(3, 2)
)
}
\arguments{
\item{object}{(\code{sculpture})}

\item{feat_labels}{(\code{NULL}) or named character vector providing the variable labels.}

\item{textsize}{Size of text.}

\item{top_k}{(\code{NULL}) or number to show only the most \code{k} important variables.}

\item{pdp_plot_sample}{(\code{logical}) Sample PDP for faster ploting? Defaults to \code{TRUE}.}

\item{show_pdp_plot}{(\code{logical}) Show plot with PDP ranges? Defaults to \code{TRUE}.}

\item{var_imp_type}{(\code{character}) One of \code{c("normalized", "absolute", "ice", "ice_orig_mod")}.
Defaults to "normalized". "ice" is only valid for a rough sculpture.}

\item{logodds_to_prob}{(\code{logical}) Only valid for binary response and sculptures built on
the log-odds scale. Defaults to \code{FALSE} (i.e. no effect).
If \code{TRUE}, then the y-values are transformed through inverse logit function 1 / (1 + exp(-x)).}

\item{plot_ratios}{(\code{numeric}) Used in the layout matrix of \code{gridExtra::arrangeGrob()}.
If \code{show_pdp_plot}, then the default is \code{c(3,2,2)}, making the first plot 3 units wide and
the other two plots 2 units wide.
If \code{!show_pdp_plot}, then the default is \code{c(3,2)}, making the first plot 3 units wide and
the second plot 2 units wide.
Note that the length needs to be 3 if \code{show_pdp_plot} or 2 if \code{!show_pdp_plot}.}
}
\value{
\code{grob}. Use \code{grid::grid.draw} to plot the output
(\code{grid::grid.newpage} resets the plotting area).
}
\description{
Plot variable importances and cumulative approximation of R^2
}
\examples{
df <- mtcars
df$vs <- as.factor(df$vs)
model <- rpart::rpart(
  hp ~ mpg + carb + vs,
  data = df,
  control = rpart::rpart.control(minsplit = 10)
)
model_predict <- function(x) predict(model, newdata = x)
covariates <- c("mpg", "carb", "vs")
pm <- sample_marginals(df[covariates], n = 50, seed = 5)

rs <- sculpt_rough(
  dat = pm,
  model_predict_fun = model_predict,
  n_ice = 10,
  seed = 1,
  verbose = 0
)

# optionally define labels
labels <- structure(
  toupper(covariates), # labels
  names = covariates # current (old) names
)
vi <- g_var_imp(rs, feat_labels = labels)
grid::grid.draw(vi)

}
