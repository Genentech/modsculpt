% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sculpting.R
\name{sculpt_detailed_lm}
\alias{sculpt_detailed_lm}
\title{Create a detailed model with lm smoother}
\usage{
sculpt_detailed_lm(rs, missings = NULL, verbose = 0, allow_par = FALSE)
}
\arguments{
\item{rs}{Rough model, i.e. object of classes \code{rough} and \code{sculpture}.}

\item{missings}{(\code{NULL}) or single value or a named vector.
Specifies the value(-s) that stand for the missing values.
If \code{NULL}, then no missing value handling is carried out.
If single value, then it is assumed that this value is used for flagging missing values across
all continuous variables.
If named vector, then the names are used to refer to continuous variables and the values for
flagging missing values in that variable.}

\item{verbose}{(\code{integer}) 0 for silent run, > 0 for messages.}

\item{allow_par}{(\code{logical}) Allow parallel computation? Defaults to \code{FALSE}.}
}
\value{
Object of classes \code{detailed} and \code{sculpture}.
}
\description{
Create a detailed model with lm smoother
}
\details{
For parallel computation, use \code{\link[=parallel_set]{parallel_set()}} and set \code{allow_par} to \code{TRUE}.
Note that parallel computation may fail if the model is too big and there is not enough memory.
}
\examples{
df <- mtcars
df$vs <- as.factor(df$vs)
model <- rpart::rpart(
  hp ~ mpg + carb + vs,
  data = df,
  control = rpart::rpart.control(minsplit = 10)
)
model_predict <- function(x) predict(model, newdata = x)
covariates <- c("mpg", "carb", "vs")
pm <- sample_marginals(df[covariates], n = 50, seed = 5)

rs <- sculpt_rough(
  dat = pm,
  model_predict_fun = model_predict,
  n_ice = 10,
  seed = 1,
  verbose = 0
)

ds <- sculpt_detailed_lm(rs)
class(ds)

}
